name: Release
on:
  pull_request:
  push:
    tags: ["v*", "test*"]
  workflow_dispatch:

jobs:
  prepare-environment:
    name: "Prepare build Environment"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: /home/runner/.cargo
          key: cache-${{ github.run_id }}-${{ github.run_number }}
      - run: cargo install cross
      - run: which cross
  build:
    name: "Build for ${{matrix.target}}"
    runs-on: ubuntu-latest
    needs:
      - prepare-environment
    strategy:
      fail-fast: false
      matrix:
        target:
          - i686
          - x86_64
          - armv7
          - aarch64
    env:
      ARCH: ${{matrix.target}}
    steps:
      - uses: actions/cache@v3
        with:
          path: /home/runner/.cargo
          key: cache-${{ github.run_id }}-${{ github.run_number }}
      - uses: actions/checkout@v3
      - uses: hecrj/setup-rust-action@v1
      - run: |
          ARCH="${ARCH}-unknown-linux-gnu"
          [[ "$ARCH" =~ armv7* ]] && ARCH="${ARCH}eabihf"
          cross build --verbose --target="${ARCH}" --release
          mkdir -p release
          mv target/${ARCH}/release/ncp-metrics-exporter release/ncp-metrics-exporter-${{matrix.target}}
      - uses: actions/upload-artifact@master
        with:
          name: ncp-metrics-exporter-${{matrix.target}}
          path: release
  release:
    name: "Create Github release with binaries"
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: ncp-metrics-exporter-i686
          path: release/i686
      - uses: actions/download-artifact@master
        with:
          name: ncp-metrics-exporter-x86_64
          path: release/x86_64
      - uses: actions/download-artifact@master
        with:
          name: ncp-metrics-exporter-armv7
          path: release/armv7
      - uses: actions/download-artifact@master
        with:
          name: ncp-metrics-exporter-aarch64
          path: release/aarch64
      - run: |
          set -x
          git fetch -f origin ${{ github.ref }}:${{ github.ref }}
          args=()
          for arch in i686 x86_64 armv7 aarch64
          do
            asset="release/${arch}/ncp-metrics-exporter-${arch}"
            [[ -f "$asset" ]] || {
              echo -e "'$asset' not found!"
              exit 1
            }
            args+=("-a" "$asset")
          done
          
          git tag -l --format='%(contents)' "${{ github.ref_name }}"
          if [[ "${{ github.ref_type }}" == "tag" ]]
          then
            msg="$(git tag -l --format='%(contents)' "${{ github.ref_name }}")"
            release_name="${{ github.ref_name }}"
          else
            msg="TEST RELEASE (${{ github.ref_name }})"
            release_name="test-${{ github.run_id }}"
          fi
          args+=("-m" "${msg:-${{github.ref_name}}}" "$release_name")
          
          hub release create "${args[@]}"
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
